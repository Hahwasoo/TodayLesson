<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.todaylesson.Mapper.JY_US_TotalLessonMapper">



<select id="getCount" resultType="int" parameterType="java.util.HashMap">
		<![CDATA[
		select COUNT(*) 
		from lesson
		where lesson_result = 2
		and DATE_FORMAT(now(),"%Y-%m-%d") >= date(lesson_open_period) 
		and DATE_FORMAT(now(),"%Y-%m-%d") <= date(lesson_close_period)
		
		]]>
		<if test="cate gt 0">
		and lesson_category=#{cate}
		</if>
		<!-- WHERE절을 include 태그로 삽입 -->
<include refid="search_select"></include>

</select>


	<!-- 승인 난 애들만 볼 수 있으니까 -->
	<select id="ttlesson_list" resultType="com.todaylesson.DTO.LessonDTO">
<![CDATA[
select * from lesson
where lesson_result=2
and DATE_FORMAT(now(),"%Y-%m-%d") >= date(lesson_open_period) 
and DATE_FORMAT(now(),"%Y-%m-%d") <= date(lesson_close_period)
]]>
		<if test="cate gt 0">
		and lesson_category=#{cate}
		</if>
		
<include refid="search_select"></include>
  order by ${order} desc
limit   #{startrow}, 12

	</select>
	
	
	<!-- 검색기능 쿼리문 -->
<sql id="search_select">


<if test='searchtxt!=null and searchtxt!=""'>

<choose>
<when test='search.equals("all")'>
and
(
lesson_title like CONCAT('%', #{searchtxt}, '%')
or 
lesson_content like CONCAT('%', #{searchtxt}, '%')
)					
</when>
<when test='search.equals("lesson_title")'>
and
 lesson_title like CONCAT('%', #{searchtxt}, '%')
</when>
<when test='search.equals("lesson_content")'>
and
lesson_content like CONCAT('%', #{searchtxt}, '%')
</when>
</choose>
</if>

</sql> 




	<select id="ttlesson_select" resultType="com.todaylesson.DTO.AllLessonDTO">

		select * from lesson join senior
		on lesson.senior_no =
		senior.senior_no
		where lesson_no = #{lesson_no}

	</select>

	<update id="ttlesson_readno_plus">

		update lesson
		set lesson_readno = lesson_readno + 1
		where lesson_no = #{lesson_no}

	</update>


	<update id="ttlesson_like_count_plus">
		update lesson
		set lesson_like = lesson_like + 1
		where
		lesson_no = #{lesson_no}
	</update>

	<insert id="add_like_lesson">

		insert into mylike(lesson_no, member_id)
		value(#{lesson_no},#{member_id})


	</insert>

	<insert id="add_cart_lesson">

		insert into cart(lesson_no, member_id, cart_amount)
		value(#{lesson_no},#{member_id},1)
	</insert>

	<insert id="add_lesson_reply">

		insert into lesson_qa(lesson_no,
		member_id,lesson_qa_reply_title,
		lesson_qa_reply_content,lesson_qa_register_date,lesson_qa_reply_secret,
		lesson_qa_originno)
		value(#{lesson_no},#{member_id},#{lesson_qa_reply_title},#{lesson_qa_reply_content},now(),#{lesson_qa_reply_secret},0)

	</insert>



	<select id="select_lesson_reply" resultType="com.todaylesson.DTO.Lesson_qaDTO">

		select * from lesson_qa
		where lesson_no = #{lesson_no} and
		lesson_qa_originno = 0

	</select>

	<select id="has_like_lesson" resultType="com.todaylesson.DTO.MyLikeDTO" parameterType="com.todaylesson.DTO.MyLikeDTO">

		select * from mylike
		where lesson_no=#{lesson_no} and
		member_id = #{member_id}


	</select>

	<select id="has_cart_lesson" resultType="com.todaylesson.DTO.CartDTO" parameterType="com.todaylesson.DTO.CartDTO">

		select * from cart
		where lesson_no = #{lesson_no} and
		member_id=#{member_id}

	</select>

	<insert id="add_lesson_reply_answer">
	
		<selectKey order="BEFORE" keyProperty="lesson_qa_group" resultType="integer">
			select ifnull(max(lesson_qa_group),0)
			from lesson_qa
			where
			lesson_no = #{lesson_no} and lesson_qa_originno =
			#{lesson_qa_originno}
		</selectKey>
		
		<!-- 답글 여러개는 버리자 걍ㅎ 시간 나면 해 -->
		insert into lesson_qa(lesson_no, member_id, lesson_qa_originno,
		lesson_qa_answer_content,lesson_qa_group, lesson_qa_register_date,
		lesson_qa_reply_secret )
		value
		(#{lesson_no},#{member_id},#{lesson_qa_originno},#{lesson_qa_answer_content},
		#{lesson_qa_group}+1, now(), #{lesson_qa_reply_secret})

	</insert>

	<select id="select_lesson_reply_answer" resultType="com.todaylesson.DTO.Lesson_qaDTO">

		select lesson_qa_no,lesson_qa_answer_content,
		lesson_qa_originno,lesson_qa_register_date,member_id
		from lesson_qa
		where lesson_qa_originno != 0 and lesson_no = #{lesson_no}

	</select>


	<select id="has_answer_reply" resultType="integer">

		select
		ifnull(max(lesson_qa_group),0)
		from lesson_qa
		where lesson_no =
		#{lesson_no} and lesson_qa_originno =
		#{lesson_qa_originno}

	</select>

	<select id="select_member_info" resultType="com.todaylesson.DTO.MemberDTO">

		select * from member where member_id = #{member_id}

	</select>

	<update id="updatepoint" parameterType="com.todaylesson.DTO.MemberDTO">
		update member
		set member_point = #{member_point}
		where
		member_id = #{member_id}
	</update>

	<select id="selectorderdetail" resultType="com.todaylesson.DTO.OrderDetailDTO">
		select * from order_detail left outer join product on
		order_detail.product_no=product.product_no
		left outer join lesson on
		order_detail.lesson_no=lesson.lesson_no
		where
		orderlist_no=#{orderlist_no};
	</select>

	<select id="selectorderlist" resultType="com.todaylesson.DTO.OrderListDTO">
		select * from orderlist
		where orderlist_no=#{orderlist_no}
	</select>


	<insert id="insertorderlist" parameterType="com.todaylesson.DTO.OrderListDTO">
		insert into
		orderlist(orderlist_no,member_id,orderlist_receiver,orderlist_phone,orderlist_addr
		,orderlist_date,orderlist_orderstatus,orderlist_cost
		,orderlist_paystatus,orderlist_calculatestatus,orderlist_usepoint,orderlist_zipcode,orderlist_msg)
		values
		(#{orderlist_no},#{member_id},#{orderlist_receiver},#{orderlist_phone},#{orderlist_addr},
		sysdate(),1,#{orderlist_cost}
		,1,1,#{orderlist_usepoint},#{orderlist_zipcode},#{orderlist_msg})
	
	</insert>
	<!-- -->

	<insert id="insertorderdetail" parameterType="com.todaylesson.DTO.OrderDetailDTO">
		insert into order_detail
		(orderlist_no,lesson_no,order_count)
		values(#{orderlist_no},#{lesson_no},1)
	</insert>


	<select id="select_lesson_lreview" resultType="com.todaylesson.DTO.LReviewDTO">
	
		select *
		from lreview, orderlist, order_detail
		where lreview.orderlist_no=orderlist.orderlist_no
		and orderlist.orderlist_no=order_detail.orderlist_no
		and lesson_no=#{lesson_no}	
	
	</select>
	
	<insert id="add_lesson_review" parameterType="com.todaylesson.DTO.LReviewDTO">
	
	 <selectKey resultType="int" keyProperty="orderlist_no" order="BEFORE">
select orderlist.orderlist_no from orderlist, order_detail 
where order_detail.orderlist_no=orderlist.orderlist_no and lesson_no=#{lesson_no} and member_id=#{member_id}
order by orderlist_date desc limit 1
 </selectKey>
 insert into lreview(orderlist_no, lreview_title,lreview_content, lreview_date)
 values (#{orderlist_no},#{lreview_title},#{lreview_content},sysdate())
</insert>
	
	
	<update id="add_lesson_junior">
	
	update lesson
	set lesson_junior_count = lesson_junior_count+1
	where lesson_no = #{lesson_no}
	
	</update>


<select id="ttlesson_cat_select" resultType="com.todaylesson.DTO.AllLessonDTO">
		<![CDATA[

		select * from lesson join senior
		on lesson.senior_no =
		senior.senior_no
		where lesson_category = #{lesson_cat}
		and lesson_result = 2
		and DATE_FORMAT(now(),"%Y-%m-%d") >= date(lesson_open_period) 
		and DATE_FORMAT(now(),"%Y-%m-%d") <= date(lesson_close_period)
		
		]]>
		</select>


</mapper>