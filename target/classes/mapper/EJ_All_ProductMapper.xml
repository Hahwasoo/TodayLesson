<?xml version="1.0" encoding="UTF-8"?>  <!-- 해당하는 xml을 mybatis와 관련된 규칙으로 한다. -->
<!DOCTYPE mapper 
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  

<mapper namespace="com.todaylesson.Mapper.EJ_US_ProductMapper">


<!--1.상품관리  -->
<select id="allData" resultType="com.todaylesson.DTO.ProductDTO">
select *
from product
</select>


<!-- 게시판 insert -->
<insert id="insertBoard" parameterType="com.todaylesson.DTO.ProductDTO">
INSERT INTO product (product_name, product_cost, product_stock, product_content, product_img, product_thumb, product_category, product_sale, product_after_cost, product_date)
				VALUES (#{product_name},#{product_cost},#{product_stock},#{product_content},#{product_img},#{product_thumb}, #{product_category}, #{product_sale}, #{product_after_cost}
				,now())
</insert>


<select id="selectBoard" parameterType="int" resultType="com.todaylesson.DTO.ProductDTO">
select *
from product
where product_no=#{product_no}
</select>

<delete id="deletepro" parameterType="com.todaylesson.DTO.ProductDTO">
   	delete from product
   	 where product_no=#{product_no}
   	</delete>
   	<update id="updatepro" parameterType="com.todaylesson.DTO.ProductDTO">
   	update product
   	set product_name=#{product_name}
   	, product_cost=#{product_cost}
   	, product_stock=#{product_stock}
   	, product_content=#{product_content}
   	, product_img=#{product_img}
   	, product_thumb=#{product_thumb}
   	, product_category=#{product_category}
   	, product_sale=#{product_sale}
   	, product_after_cost=#{product_after_cost}
   	where product_no=#{product_no}
				
   	</update>
   	<update id="updatepro_nothumbnail" parameterType="com.todaylesson.DTO.ProductDTO">
   		update product
   	set product_name=#{product_name}
   	, product_cost=#{product_cost}
   	, product_stock=#{product_stock}
   	, product_content=#{product_content}
   	, product_img=#{product_img}
   	, product_category=#{product_category}
   	, product_sale=#{product_sale}
   	, product_after_cost=#{product_after_cost}
   	where product_no=#{product_no}
   	</update>

 <select id="selectReply" resultType="com.todaylesson.DTO.PdReviewDTO">
select *
from pdreview, orderlist, order_detail
where pdreview.orderlist_no=orderlist.orderlist_no
and orderlist.orderlist_no=order_detail.orderlist_no
and product_no=#{product_no}
</select> 
<!--2.댓글관리  -->
<!-- 댓글작성 -->
<insert id="registReply" parameterType="com.todaylesson.DTO.PdReviewDTO">
 <selectKey resultType="int" keyProperty="orderlist_no" order="BEFORE">
select orderlist.orderlist_no from orderlist, order_detail 
 	where order_detail.orderlist_no=orderlist.orderlist_no and product_no=#{product_no} and member_id=#{member_id}
 </selectKey>
 insert into pdreview(orderlist_no, pdreview_content, pdreview_date)
 values (#{orderlist_no},#{pdreview_content},sysdate())
</insert>

<!--관리자 댓글 전체 리스트보기  -->
<select id="selectAllReview" resultType="com.todaylesson.DTO.PdReviewDTO">
select * from pdreview left outer join orderlist on orderlist.orderlist_no=pdreview.orderlist_no
						left outer join order_detail on orderlist.orderlist_no=order_detail.orderlist_no
                        left outer join product on product.product_no=order_detail.product_no;
</select>
<!-- 관리자 댓글 디테일 -->
<select id="selectpdreview" parameterType="int" resultType="com.todaylesson.DTO.PdReviewDTO">
select * from pdreview left outer join orderlist on orderlist.orderlist_no=pdreview.orderlist_no
						left outer join order_detail on orderlist.orderlist_no=order_detail.orderlist_no
                        left outer join product on product.product_no=order_detail.product_no
                        where pdreview_no=#{pdreview_no}
</select>
	<!-- 댓글삭제 -->
<delete id="deletepdreview" parameterType="com.todaylesson.DTO.PdReviewDTO">
   	delete from pdreview
   	 where pdreview_no=#{pdreview_no}
   	</delete>
   	
   	<!--11.기타  -->
<select id="selectMember" parameterType="String" resultType="com.todaylesson.DTO.MemberDTO">
select *
from member
where member_id=#{member_id}
</select>


	<insert id="insertorderlist" parameterType="com.todaylesson.DTO.OrderListDTO">
	insert into orderlist(orderlist_no,member_id,orderlist_receiver,orderlist_phone,orderlist_addr
	,orderlist_date,orderlist_orderstatus,orderlist_cost
	,orderlist_paystatus,orderlist_calculatestatus,orderlist_usepoint,orderlist_zipcode,orderlist_msg)
	values (#{orderlist_no},#{member_id},#{orderlist_receiver},#{orderlist_phone},#{orderlist_addr},
	now(),1,#{orderlist_cost},1,1,#{orderlist_usepoint},#{orderlist_zipcode},#{orderlist_msg})
	</insert>
	<!--  -->

	<insert id="insertorderdetail" parameterType="com.todaylesson.DTO.OrderDetailDTO">
	insert into order_detail (orderlist_no,product_no,order_count)
	 values(#{orderlist_no},#{product_no},#{order_count})
	</insert>
	<!-- insert into tbl_order_details(orderDetailsNum, orderId, gdsNum, cartStock)
     select tbl_order_details_seq.nextval, #{orderId}, gdsNum, cartStock
         from tbl_cart     -->
	<insert id="insertmylike" parameterType="com.todaylesson.DTO.MyLikeDTO">
	insert into mylike(product_no,member_id) values(#{product_no},#{member_id})
	</insert>
	
	<insert id="insertcart" parameterType="com.todaylesson.DTO.CartDTO">
	insert into cart(product_no,member_id, cart_amount) values(#{product_no},#{member_id},#{cart_amount})
	</insert>
	
	<select id="selectmylike" resultType="com.todaylesson.DTO.MyLikeDTO">
	select * from mylike left outer join product on mylike.product_no=product.product_no
						left outer join lesson on mylike.lesson_no=lesson.lesson_no
						where member_id=#{member_id}
	</select>
	<select id="selectmycart" resultType="com.todaylesson.DTO.CartDTO">
	 select * from cart left outer join product on cart.product_no=product.product_no
						left outer join lesson on cart.lesson_no=lesson.lesson_no
						where member_id=#{member_id}
	</select>
	
	<!-- updatepoint(int remainpoint); -->
	 <update id="updatepoint"  parameterType="com.todaylesson.DTO.MemberDTO">
        update  member
        set member_point = #{member_point}
        where member_id = #{member_id}  
    </update>
	 

	<select id="has_cart_product" resultType="com.todaylesson.DTO.CartDTO" parameterType="com.todaylesson.DTO.CartDTO">
select * from cart
where product_no = #{product_no} and member_id=#{member_id}
</select>

<select id="has_mylike_product" resultType="com.todaylesson.DTO.MyLikeDTO" parameterType="com.todaylesson.DTO.MyLikeDTO">
select * from mylike
where product_no=#{product_no} and member_id = #{member_id}
</select>

	<!-- 다중insert 구문 -->
    	<insert id="insertorder_cart" parameterType="java.util.HashMap">
   		insert into order_detail
   		(orderlist_no,product_no,lesson_no,order_count)
   		values (#{orderlist_no}, #{product_no}, #{lesson_no},#{cart_amount})
   	</insert>  
 
   	
   	<delete id="deletecart" parameterType="com.todaylesson.DTO.CartDTO">
   	delete from cart
   	 where product_no=#{product_no} and member_id=#{member_id}
   	</delete>
   
   	 	
   	
  
   	<delete id="deletecart_lesson" parameterType="com.todaylesson.DTO.CartDTO">
   	delete from cart
   	 where lesson_no=#{lesson_no} and member_id=#{member_id}
   	</delete>
   	
   	<delete id="delete_all_cart" parameterType="com.todaylesson.DTO.CartDTO">
   	delete from cart
   	 where member_id=#{member_id}
   	</delete>
   	

   	<select id="selectorderdetail" resultType="com.todaylesson.DTO.OrderDetailDTO">
   	select * from order_detail left outer join product on order_detail.product_no=product.product_no
						left outer join lesson on order_detail.lesson_no=lesson.lesson_no
						where orderlist_no=#{orderlist_no};
   	</select>
   	
   	<select id="selectorderlist"  resultType="com.todaylesson.DTO.OrderListDTO">
   	select * from orderlist
   	where orderlist_no=#{orderlist_no}
   	</select>
   	
</mapper> 